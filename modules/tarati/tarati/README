==============================================================================
                                  TARATI
==============================================================================

The code in this directory implements the ASIM external component
interface, a.k.a. Tarati.


What's that name
----------------
tarati: Sanskrit; (he) crosses (over);

Related words:
  avatar: Sanskrit avatAra descent, from avatarati he descends, from
          ava- away + tarati he crosses over
  traverse: Middle English travers, from Middle French traverse, from
            traverser to cross, from Late Latin transversare, from Latin
            transversus transverse; something that crosses or lies across;
  through: Middle English thurh, thruh, through, from Old English thurh;
           akin to Old High German durh through, Latin trans across,
           beyond, Sanskrit tarati he crosses over
  trans: Latin; see through
  durch: German; see through
  través : Spanish;
           a ~ de: 1. loc. prepos. Indicates that something passes from
                                   one side to another.
           de ~: 1. loc. adv. In transversal direction.

What is it
----------

The Tarati interface uses XML-RPC as its low-level transport layer. On top
of this, Tarati implements the following abstractions:

Server:
  The code that maintains the connections to clients.

Service:
  A logical entity of some sort that provides some set of functionality to
  the outside world.

Method:
  One specific function that is accessible by the outside world.

The software structure is based on registration services for its various
components in order to be easily extendible.

 - Each Service belongs to exactly one Server and registers its presence
   with that Server.
 - Each Method belongs to exactly one Service and registers its
   presence with that Service.


Built-in Methods
----------------

There are several built-in Methods that always exist:

 - Each Service provides the following Methods:
   - "MethodDirectory": takes no arguments and returns the list of
     registered Methods of this Service.
   - "Version": takes no arguments and returns a string with the version
     number of the Server interface.
 - The Server provides a Service named "Server".  The "Server" Service
   provides the following Methods:
   - "ServiceDirectory": takes no arguments and returns the list of
     registered Services of this Server.

With this set of built-in Methods, clients can autonomously explore all
available features of the Server.


Clients
-------

To communicate with a Tarati server, a Tarati client opens a XML-RPC
connection to the server machine and port and issues a XML-RPC method call
to the server. The low-level xml-rpc method name is generated by
concatenating the Tarati Service and Method names with "::", e.g.
the built-in MethodDirectory of the Server is called
"Server::MethodDirectory". Argument and result passing use the normal
XML-RPM parameter passing mechanism.
