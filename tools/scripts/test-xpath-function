:
eval 'exec perl -w "$0" ${1+"$@"}'
       if 0;

#
# Copyright (C) 2003-2006 Intel Corporation
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
#

use XML::GDOME;

$quiet = 0;

sub test_xml_libs {
  my @test = @_;

  myprintf("begin testing XML libs\n");

  my $xml_data = '<?xml version="1.0"?><mydoc><foo bar="asdf"/></mydoc>';

  my $doc = XML::GDOME->createDocFromString($xml_data);
  my $root = $doc->getDocumentElement();

#  push @test, "regexp(bar,'.*','i')";
#  push @test, "xdsfdgftr(bar,'.*','i')";
#  push @test, "bar='asdf'";

  foreach my $test (@test) {
    eval {
      my $result = $root->findnodes("//foo[$test]");
      myprintf("testing '$test' returned '$result'\n");
    };
    if ($@) {
      myprintf("testing '$test' failed with '$@'\n");
      exit 1;
    }
  }

  myprintf("end testing XML libs\n");
}

sub myprintf {
  printf(@_)  if (!$quiet);
}

sub usage_and_exit {
  my $msg = shift;

  if (defined $msg && $msg ne "") {
    print "\n";
    print "ERROR: $msg\n";
  }
  print "\n";
  print "Usage: $0 [options] <xpath_expression>\n";
  print "  Return 0 exit status if <xpath_expression> is understood by XML libs\n";
  print "  Options:\n";
  print "    -h ......... print this help\n";
  print "    -q ......... quiet\n";
  print "    --regexp ... test existence of regexp() function\n";
  print "\n";
  exit 1;
}

#------------------------------- main -------------------------------

while ($#ARGV >= 0) {
  my $arg = $ARGV[0];
  if ($arg eq "-q") {
    $quiet = 1;
    shift;
  } elsif ($arg eq "-h") {
    usage_and_exit();
  } elsif ($arg eq "--regexp") {
    shift;
    push @ARGV, "regexp(bar,'.*','i')";
  } elsif ($arg eq "--") {
    shift;
    last;
  } elsif ($arg =~ m/^-/) {
    usage_and_exit("Don't understand command line flag '$arg'");
  } else {
    last;
  }
}

if ($#ARGV < 0) {
  usage_and_exit("Missing <xpath_expression>");
}

test_xml_libs(@ARGV);
exit 0;
