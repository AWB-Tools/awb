#!/usr/bin/env perl
# -*- perl -*-

#
# Copyright (C) 2004-2006 Intel Corporation
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
#

#
# Author:  Joel Emer
#

use File::Basename;
use Getopt::Long;

use Asim;

#
# Turn on warnings
#
$^W = 1;

#
# Argument handling
#
my $status;

my $benchmarkDBfile = "";
my $name = "";
my @params = ();

my $list = 0;

my $help = 0;
my $verbose = 0;
my $warnings = 1;
my $debug = 0;

$status = GetOptions( "benchmarkDB=s"  => \$benchmarkDBfile,
                      "name=s"         => \$name,
                      "param=s"        => \@params,
                      "list"           => \$list,
                      "verbose"        => \$verbose,
                      "warnings!"      => \$warnings,
                      "help"           => \$help,
                      "debug"          => \$debug
                    );


if (!$status) {
  my $prog = basename($0);
  print STDERR "$prog: Illegal argument, try '$prog --help'\n";
  exit 1;
}

if ($help) {
  system "perldoc $0";
  exit 0;
}

my @variables = ();

for my $p (@params) {
  push @variables, split("=", $p);
}

Asim::init()
  || die("Unable to initialize Asim::\n");


if ($debug) {
  print "benchmarkDBfile = $benchmarkDBfile\n";
  print "name = $name\n";

  print join(",", @params) . "\n";
}


my $benchmarkDB = Asim::Benchmark::DB->new($benchmarkDBfile);

if ($list) {
  print join("\n", $benchmarkDB->directory()) . "\n";
  exit 0;
}

my $benchmark = $benchmarkDB->get_benchmark($name, @variables);

if ($debug) {
  print "\n";
  print "Benchmark dump\n";
  print "\n";
  $benchmark->dump();
}

for my $f (@ARGV) {
  my $value = $benchmark->get($f);

  if ($verbose) {
    print $f . " = ";
  }
  
  if (defined($value)) {
    print "$value\n";
  } else {
    print "***UNDEFINED***\n";
    $status = 0;
  }
}

exit !$status;


# Die in batch mode, just warn in interactive mode

sub warn_or_die {
  my $msg = shift;

  die($msg);
}

__END__

=head1 NAME

Awb-benchmark - program to 

=head1 SYNOPSIS

awb-benchmark TBD

=head1 DESCRIPTION

TBD

=head1 SWITCHES

The following command line switches are currently supported:

=over 4 

=item --TBD

TBD

=item --help

Get this help information.

=back


=head1 EXAMPLES

=head1 ENVIRONMENT VARIABLES

=head1 FILES

=head1 BUGS

TBD

=head1 AUTHORS

Joel Emer

=head1 COPYRIGHT

 ********************************************************
 *                                                      *
 *   Copyright (c) Compaq Computer Corporation, 2001    *
 *                                                      *
 *   All Rights Reserved.  Unpublished rights reserved  *
 *   under the copyright laws of the United States.     *
 *                                                      *
 ********************************************************

=cut

